// Generated by data binding compiler. Do not edit!
package com.dkc.applaunchh.weatherapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.cardview.widget.CardView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dkc.applaunchh.weatherapp.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class WeatherFragmentBinding extends ViewDataBinding {
  @NonNull
  public final TextView HomeTestimonials;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView humidity;

  @NonNull
  public final ImageView loginText;

  @NonNull
  public final TextView temp;

  @NonNull
  public final Toolbar topAppBar;

  @NonNull
  public final TextView weathertype;

  @NonNull
  public final TextView windspeed;

  protected WeatherFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView HomeTestimonials, CardView cardView, TextView humidity, ImageView loginText,
      TextView temp, Toolbar topAppBar, TextView weathertype, TextView windspeed) {
    super(_bindingComponent, _root, _localFieldCount);
    this.HomeTestimonials = HomeTestimonials;
    this.cardView = cardView;
    this.humidity = humidity;
    this.loginText = loginText;
    this.temp = temp;
    this.topAppBar = topAppBar;
    this.weathertype = weathertype;
    this.windspeed = windspeed;
  }

  @NonNull
  public static WeatherFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.weather_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static WeatherFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<WeatherFragmentBinding>inflateInternal(inflater, R.layout.weather_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static WeatherFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.weather_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static WeatherFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<WeatherFragmentBinding>inflateInternal(inflater, R.layout.weather_fragment, null, false, component);
  }

  public static WeatherFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static WeatherFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (WeatherFragmentBinding)bind(component, view, R.layout.weather_fragment);
  }
}
