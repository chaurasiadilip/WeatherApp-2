// Generated by Dagger (https://dagger.dev).
package com.dkc.applaunchh.weatherapp.weatherdetail;

import android.content.SharedPreferences;
import com.dkc.applaunchh.weatherapp.network.WeatherApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class WeatherViewModel_Factory implements Factory<WeatherViewModel> {
  private final Provider<WeatherApi> weatherApiProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public WeatherViewModel_Factory(Provider<WeatherApi> weatherApiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.weatherApiProvider = weatherApiProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public WeatherViewModel get() {
    return newInstance(weatherApiProvider.get(), sharedPreferencesProvider.get());
  }

  public static WeatherViewModel_Factory create(Provider<WeatherApi> weatherApiProvider,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new WeatherViewModel_Factory(weatherApiProvider, sharedPreferencesProvider);
  }

  public static WeatherViewModel newInstance(WeatherApi weatherApi,
      SharedPreferences sharedPreferences) {
    return new WeatherViewModel(weatherApi, sharedPreferences);
  }
}
