// Generated by Dagger (https://dagger.dev).
package com.dkc.applaunchh.weatherapp.repository;

import com.dkc.applaunchh.weatherapp.db.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBRepository_Factory implements Factory<DBRepository> {
  private final Provider<AppDatabase> databaseProvider;

  public DBRepository_Factory(Provider<AppDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public DBRepository get() {
    return newInstance(databaseProvider.get());
  }

  public static DBRepository_Factory create(Provider<AppDatabase> databaseProvider) {
    return new DBRepository_Factory(databaseProvider);
  }

  public static DBRepository newInstance(AppDatabase database) {
    return new DBRepository(database);
  }
}
