// Generated by Dagger (https://dagger.dev).
package com.dkc.applaunchh.weatherapp.repository;

import com.dkc.applaunchh.weatherapp.network.WeatherApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteRepository_Factory implements Factory<RemoteRepository> {
  private final Provider<WeatherApi> weatherApiProvider;

  public RemoteRepository_Factory(Provider<WeatherApi> weatherApiProvider) {
    this.weatherApiProvider = weatherApiProvider;
  }

  @Override
  public RemoteRepository get() {
    return newInstance(weatherApiProvider.get());
  }

  public static RemoteRepository_Factory create(Provider<WeatherApi> weatherApiProvider) {
    return new RemoteRepository_Factory(weatherApiProvider);
  }

  public static RemoteRepository newInstance(WeatherApi weatherApi) {
    return new RemoteRepository(weatherApi);
  }
}
